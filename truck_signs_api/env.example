# ===========================================
# TRUCK SIGNS API - ENVIRONMENT VARIABLES
# ===========================================
# Kopieren Sie diese Datei zu .env und füllen Sie die Werte aus
# cp env.example .env

# ===========================================
# DJANGO CORE SETTINGS
# ===========================================
# Django Debug Modus (nur für Entwicklung)
DEBUG=1

# Django Secret Key (WICHTIG: Generieren Sie einen sicheren Key!)
# Generieren Sie einen neuen Key mit: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=django-insecure-CHANGE-THIS-IN-PRODUCTION

# Django Settings Module
DJANGO_SETTINGS_MODULE=truck_signs_designs.settings.docker

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL Database URL
DATABASE_URL=postgres://postgres:postgres@db:5432/truck_signs_db

# Alternative Database Settings (falls DATABASE_URL nicht verwendet wird)
DB_NAME=truck_signs_db
DB_USER=postgres
DB_PASSWORD=postgres
DB_HOST=db
DB_PORT=5432

# ===========================================
# CLOUDINARY CONFIGURATION (File Storage)
# ===========================================
# Cloudinary Cloud Name
CLOUD_NAME=your-cloudinary-cloud-name

# Cloudinary API Key
CLOUD_API_KEY=your-cloudinary-api-key

# Cloudinary API Secret
CLOUD_API_SECRET=your-cloudinary-api-secret

# ===========================================
# STRIPE CONFIGURATION (Payment Processing)
# ===========================================
# Stripe Publishable Key (öffentlich)
STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key

# Stripe Secret Key (geheim!)
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key

# Stripe Webhook Secret (für Webhook-Verifizierung)
STRIPE_WEBHOOK_SECRET=whsec_your-stripe-webhook-secret

# ===========================================
# EMAIL CONFIGURATION
# ===========================================
# SMTP Server Settings
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True

# Email Credentials
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-specific-password

# Admin Email
EMAIL_ADMIN=admin@yourdomain.com

# ===========================================
# ADMIN & SECURITY
# ===========================================
# Admin Domain
CURRENT_ADMIN_DOMAIN=localhost:8000

# Allowed Hosts (komma-getrennt)
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# CORS Allowed Origins (komma-getrennt)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# ===========================================
# DOCKER CONFIGURATION
# ===========================================
# Docker-specific settings
DOCKER_SECRET_KEY=django-insecure-CHANGE-THIS-IN-PRODUCTION
DOCKER_DB_NAME=truck_signs_db
DOCKER_DB_USER=postgres
DOCKER_DB_PASSWORD=postgres
DOCKER_DB_HOST=db
DOCKER_DB_PORT=5432

# ===========================================
# PRODUCTION SETTINGS (nur für Produktion)
# ===========================================
# Setzen Sie diese Werte für Produktionsumgebungen
# DEBUG=False
# SECRET_KEY=your-super-secure-production-secret-key
# ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com
# CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ===========================================
# OPTIONAL: MONITORING & ANALYTICS
# ===========================================
# Sentry DSN (für Error Tracking)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Google Analytics
# GA_TRACKING_ID=UA-XXXXXXXXX-X

# ===========================================
# OPTIONAL: ADDITIONAL SERVICES
# ===========================================
# Redis (für Caching)
# REDIS_URL=redis://localhost:6379/0

# Celery (für Background Tasks)
# CELERY_BROKER_URL=redis://localhost:6379/0
# CELERY_RESULT_BACKEND=redis://localhost:6379/0

# ===========================================
# SECURITY NOTES
# ===========================================
# 1. Niemals diese Datei mit echten Werten committen!
# 2. Verwenden Sie starke, einzigartige Passwörter
# 3. Rotieren Sie regelmäßig Ihre API Keys
# 4. Verwenden Sie unterschiedliche Keys für Entwicklung/Produktion
# 5. Aktivieren Sie 2FA für alle externen Services
# 6. Überwachen Sie Ihre API-Nutzung regelmäßig
